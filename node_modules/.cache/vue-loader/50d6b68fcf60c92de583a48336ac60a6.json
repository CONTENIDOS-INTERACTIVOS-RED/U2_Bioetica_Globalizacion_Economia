{"remainingRequest":"/home/runner/work/U2_Bioetica_Globalizacion_Economia/U2_Bioetica_Globalizacion_Economia/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/runner/work/U2_Bioetica_Globalizacion_Economia/U2_Bioetica_Globalizacion_Economia/src/views/curso/Tema3.vue?vue&type=template&id=04f0766e&lang=pug&","dependencies":[{"path":"/home/runner/work/U2_Bioetica_Globalizacion_Economia/U2_Bioetica_Globalizacion_Economia/src/views/curso/Tema3.vue","mtime":1753214035795},{"path":"/home/runner/work/U2_Bioetica_Globalizacion_Economia/U2_Bioetica_Globalizacion_Economia/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/runner/work/U2_Bioetica_Globalizacion_Economia/U2_Bioetica_Globalizacion_Economia/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":499162500000},{"path":"/home/runner/work/U2_Bioetica_Globalizacion_Economia/U2_Bioetica_Globalizacion_Economia/node_modules/pug-plain-loader/index.js","mtime":499162500000},{"path":"/home/runner/work/U2_Bioetica_Globalizacion_Economia/U2_Bioetica_Globalizacion_Economia/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/runner/work/U2_Bioetica_Globalizacion_Economia/U2_Bioetica_Globalizacion_Economia/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ci5jdXJzby1tYWluLWNvbnRhaW5lci5wYi0zCiAgQmFubmVySW50ZXJubyg6c3ViVGl0dWxvPSInMy4gUmVzcG9uc2FiaWxpZGFkIFNvY2lhbCBDb3Jwb3JhdGl2YSAoUlNDKSB5IMOpdGljYSBlbiBsYXMgZGVjaXNpb25lcyBlbXByZXNhcmlhbGVzJyIpCiAgLmNvbnRhaW5lci50YXJqZXRhLnRhcmpldGEtLWJsYW5jYS5wLTQucC1tZC01CiAgICBwLm1iLTQgTGEgUmVzcG9uc2FiaWxpZGFkIFNvY2lhbCBDb3Jwb3JhdGl2YSAoUlNDKSBzZSBoYSBjb252ZXJ0aWRvIGVuIHVuIGFzcGVjdG8gdHJhbnN2ZXJzYWwgZGVudHJvIGRlIGxhcyBwcsOhY3RpY2FzIGVtcHJlc2FyaWFsZXMsIGRlc3RhY8OhbmRvc2UgY29tbyB1bmEgcHLDoWN0aWNhIG5lY2VzYXJpYSBwYXJhIHF1ZSBsYXMgb3JnYW5pemFjaW9uZXMgY29udHJpYnV5YW4gYWwgYmllbmVzdGFyIHNvY2lhbCB5IGFtYmllbnRhbCwgZ2VuZXJhbmRvIHVuIHZhbG9yIGVjb27Ds21pY28uIEVuIHVuIGNvbnRleHRvIGRlIGdsb2JhbGl6YWNpw7NuIHkgZGUgY29uc3RhbnRlcyBleHBlY3RhdGl2YXMgc29jaWFsZXMsIGxhcyBlbXByZXNhcyBubyBzb2xvIHNvbiBldmFsdWFkYXMgcG9yIHN1IHJlbnRhYmlsaWRhZCwgc2lubyB0YW1iacOpbiBwb3Igc3UgaW1wYWN0byDDqXRpY28geSBzdSBjb250cmlidWNpw7NuIGFsIGRlc2Fycm9sbG8gc29zdGVuaWJsZS4gTGEgUlNDIHNlIGVubWFyY2EgZW4gdW5hIHZpc2nDs24gZGUgZ2VzdGnDs24gcXVlIGJ1c2NhIGVxdWlsaWJyYXIgbG9zIGludGVyZXNlcyBlY29uw7NtaWNvcywgY29uIGVsIGNvbXByb21pc28gaGFjaWEgbGFzIGNvbXVuaWRhZGVzIHkgZWwgbWVkaW8gYW1iaWVudGUsIHByb21vdmllbmRvIHByw6FjdGljYXMgcXVlIHRyYXNjaWVuZGVuIGxhcyBvYmxpZ2FjaW9uZXMgbGVnYWxlcyB5IHJlZmxlamFuIHVuYSDDqXRpY2EgY29ycG9yYXRpdmEuCiAgICAucm93Lmp1c3RpZnktY29udGVudC1jZW50ZXIubWItNS5hbGlnbi1pdGVtcy1jZW50ZXIKICAgICAgLmNvbC1sZy01LmNvbC03Lm1iLWxnLTAubWItMzogaW1nKHNyYz0nQC9hc3NldHMvY3Vyc28vdGVtYXMvMTIucG5nJywgYWx0PScnKQogICAgICAuY29sLWxnLTcKICAgICAgICAucC00Lm1iLTQoc3R5bGU9ImJhY2tncm91bmQtY29sb3I6ICNlYWY4ZmQgIikKICAgICAgICAgIHAubWItMCBFc3RlIHRlbWEgYWJvcmRhIGxhIGRlZmluaWNpw7NuIHkgZWwgYWxjYW5jZSBkZSBsYSBSU0MsIGFuYWxpemFuZG8gY8OzbW8gc2UgYXJ0aWN1bGEgY29uIGxvcyB2YWxvcmVzIHkgb2JqZXRpdm9zIGRlIGxhcyBvcmdhbml6YWNpb25lcy4gQSBzdSB2ZXosIHNlIGV4cG9uZSBsYSByZWxhY2nDs24gZW50cmUgbGEgUlNDIHkgbGEgw6l0aWNhLCBkZXN0YWNhbmRvIGPDs21vIMOpc3RhIG5vIHB1ZWRlIGRlc3ZpbmN1bGFyc2UgZGUgbGFzIGNvbnNpZGVyYWNpb25lcyDDqXRpY2FzIGVuIGxhIHRvbWEgZGUgZGVjaXNpb25lcyBlbXByZXNhcmlhbGVzLiAKCiAgICAgICAgcC5tYi0wIFRhbWJpw6luIHNlIHByb2Z1bmRpemFyw6EgZW4gbGEgw6l0aWNhIGVuIGxhcyBkZWNpc2lvbmVzIGVtcHJlc2FyaWFsZXMsIGV4YW1pbmFuZG8gZWwgcGFwZWwgZGUgbG9zIHByaW5jaXBpb3Mgw6l0aWNvcywgYWwgb3JpZW50YXIgbGEgZ2VzdGnDs24geSBsYSBlc3RyYXRlZ2lhIG9yZ2FuaXphY2lvbmFsLiAKICAgICAgICAKICAgICAgICAKICAgIHAubWItNSBGaW5hbG1lbnRlLCBzZSBwcmVzZW50YXLDoW4gbG9zIGJlbmVmaWNpb3MgeSBkZXNhZsOtb3MgZGUgbGEgUlNDLCBwZXJtaXRpZW5kbyB1bmEgY29tcHJlbnNpw7NuIGludGVncmFsIGRlIGPDs21vIGVzdGFzIHByw6FjdGljYXMgcHVlZGVuIGltcGFjdGFyIHBvc2l0aXZhbWVudGUsIHRhbnRvIGEgbGFzIGVtcHJlc2FzIGNvbW8gYSBsYSBzb2NpZWRhZCwgYWwgdGllbXBvIHF1ZSBlbmZyZW50YW4gcmV0b3MgZW4gc3UgaW1wbGVtZW50YWNpw7NuLgoKCgoKCiAgICAjdF8zXzEudGl0dWxvLXNlZ3VuZG8oZGF0YS1hb3M9ImZsaXAtdXAiKQogICAgICBoMiAjW3NwYW4gMy4xXSBEZWZpbmljacOzbiB5IGFsY2FuY2UgZGUgbGEgUmVzcG9uc2FiaWxpZGFkIFNvY2lhbCBDb3Jwb3JhdGl2YSAoUlNDKQogICAgLnJvdy5qdXN0aWZ5LWNvbnRlbnQtY2VudGVyLm1iLTUKICAgICAgLmNvbC1sZy03Lm1iLWxnLTAubWItMwogICAgICAgIHAubWItMCBMYSBSZXNwb25zYWJpbGlkYWQgU29jaWFsIENvcnBvcmF0aXZhIChSU0MpIHNlIGRlZmluZSBjb21vIGVsIGNvbXByb21pc28gcXVlIGFzdW1lbiBsYXMgZW1wcmVzYXMsIGRlIGNvbnRyaWJ1aXIgYWwgZGVzYXJyb2xsbyBzb3N0ZW5pYmxlLCBhbCBiaWVuZXN0YXIgc29jaWFsIHkgYSBsYSBwcmVzZXJ2YWNpw7NuIGRlbCBtZWRpbyBhbWJpZW50ZSwgaW50ZWdyYW5kbyBlc3RvcyBhc3BlY3RvcyBlbiBzdSBlc3RyYXRlZ2lhIHkgZW4gc3VzIG9wZXJhY2lvbmVzIGRpYXJpYXMuIE3DoXMgYWxsw6EgZGUgY3VtcGxpciBjb24gbGFzIG5vcm1hdGl2YXMgbGVnYWxlcywgbGEgUlNDIGltcGxpY2EgYWRvcHRhciB1biBjb21wb3J0YW1pZW50byDDqXRpY28geSB0cmFuc3BhcmVudGUsIHF1ZSBwcm9tdWV2YSBsYSBjb21wZXRpdGl2aWRhZCB5IGxhIGNvaGVzacOzbiBzb2NpYWwsIGFsIG1pc21vIHRpZW1wbyBxdWUgYnVzY2EgbWVqb3JhciBlbCBiaWVuZXN0YXIgZGUgbGFzIGNvbXVuaWRhZGVzIGVuIGxhcyBxdWUgb3BlcmEgKFJvZHLDrWd1ZXogSm92ZXIsIDIwMTkpLiAKICAgICAgICAgIGJyCiAgICAgICAgICBicgogICAgICAgICAgfCBMYSBpbXBvcnRhbmNpYSBkZSBsYSBSU0MgcmFkaWNhIGVuIHN1IGNhcGFjaWRhZCBkZSBjcmVhciB2YWxvciBjb21wYXJ0aWRvLCB0YW50byBwYXJhIGxhIGVtcHJlc2EgY29tbyBwYXJhIGxhIHNvY2llZGFkLCBwcm9tb3ZpZW5kbyB1biBpbXBhY3RvIHBvc2l0aXZvIHF1ZSBmb3J0YWxlY2UgbGEgcmVsYWNpw7NuIGVudHJlIGxhIG9yZ2FuaXphY2nDs24geSBzdXMgZ3J1cG9zIGRlIGludGVyw6lzLCBjb21vIGVtcGxlYWRvcywgY2xpZW50ZXMgeSBsYSBjb211bmlkYWQuCiAgICAgIC5jb2wtbGctNS5jb2wtNzogaW1nKHNyYz0nQC9hc3NldHMvY3Vyc28vdGVtYXMvMTMucG5nJywgYWx0PScnKQogICAgLnJvdy5qdXN0aWZ5LWNvbnRlbnQtY2VudGVyLmFsaWduLWl0ZW1zLXN0cmV0Y2gubWItNQogICAgICAuY29sLWxnLTQubWItNChkYXRhLWFvcz0iem9vbS1pbi11cCIpCiAgICAgICAgLmJnLWNvbG9yLXdoaXRlLmJveC1zaGFkb3cucHgtNC5weS01LmgtMTAwCiAgICAgICAgICBpbWcubXgtYXV0by5kLWJsb2NrLm1iLTQoCiAgICAgICAgICAgIHNyYz0iQC9hc3NldHMvY3Vyc28vdGVtYXMvMTQuc3ZnIgogICAgICAgICAgICBhbHQ9IiIKICAgICAgICAgICAgc3R5bGU9IndpZHRoOiA5MHB4IgogICAgICAgICAgKQogICAgICAgICAgaDQudGV4dC1jZW50ZXIgT2JqZXRpdm8gMQogICAgICAgICAgcC5tYi0wLnRleHQtY2VudGVyIEltcGxlbWVudGFyIHVuYSBjdWx0dXJhIGRlIHByZW9jdXBhY2nDs24gcG9yIGxvcyByZXN1bHRhZG9zLCBzaW4gZGVzY3VpZGFyIGVsIGNvbXBvcnRhbWllbnRvIMOpdGljby4KICAgICAgLmNvbC1sZy00Lm1iLTQoZGF0YS1hb3M9Inpvb20taW4tdXAiKQogICAgICAgIC5iZy1jb2xvci13aGl0ZS5ib3gtc2hhZG93LnB4LTQucHktNS5oLTEwMAogICAgICAgICAgaW1nLm14LWF1dG8uZC1ibG9jay5tYi00KAogICAgICAgICAgICBzcmM9IkAvYXNzZXRzL2N1cnNvL3RlbWFzLzE0LnN2ZyIKICAgICAgICAgICAgYWx0PSIiCiAgICAgICAgICAgIHN0eWxlPSJ3aWR0aDogOTBweCIKICAgICAgICAgICkKICAgICAgICAgIGg0LnRleHQtY2VudGVyIE9iamV0aXZvIDIKICAgICAgICAgIHAubWItMC50ZXh0LWNlbnRlciBQcm9tb3ZlciBsYSBpbm5vdmFjacOzbiBlbiBtb2RlbG9zIGRlIGRlc2Fycm9sbG8gc29zdGVuaWJsZS4KICAgICAgLmNvbC1sZy00Lm1iLTQoZGF0YS1hb3M9Inpvb20taW4tdXAiKQogICAgICAgIC5iZy1jb2xvci13aGl0ZS5ib3gtc2hhZG93LnB4LTQucHktNS5oLTEwMAogICAgICAgICAgaW1nLm14LWF1dG8uZC1ibG9jay5tYi00KAogICAgICAgICAgICBzcmM9IkAvYXNzZXRzL2N1cnNvL3RlbWFzLzE0LnN2ZyIKICAgICAgICAgICAgYWx0PSIiCiAgICAgICAgICAgIHN0eWxlPSJ3aWR0aDogOTBweCIKICAgICAgICAgICkKICAgICAgICAgIGg0LnRleHQtY2VudGVyIE9iamV0aXZvIDMKICAgICAgICAgIHAubWItMC50ZXh0LWNlbnRlciBFbmZyZW50YXIgZGUgbWFuZXJhIGFjdGl2YSwgbG9zIHJldG9zIHNvY2lhbGVzIGFjdHVhbGVzLCBnZW5lcmFuZG8gdmFsb3IgdGFudG8gZWNvbsOzbWljbyBjb21vIHNvY2lhbC4KICAgIC5yb3cuanVzdGlmeS1jb250ZW50LWNlbnRlci5tYi00CiAgICAgIC5jb2wtbGctNS5jb2wtNy5tYi1sZy0wLm1iLTM6IGltZyhzcmM9J0AvYXNzZXRzL2N1cnNvL3RlbWFzLzE1LnBuZycsIGFsdD0nJykKICAgICAgLmNvbC1sZy03CiAgICAgICAgcC5tYi00IFVuIGVqZW1wbG8gZGUgUlNDLCBwdWVkZSBzZXIgZWwgY2FzbyBkZSB1bmEgZW1wcmVzYSBkZSBhbGltZW50b3MgcXVlLCBhZGVtw6FzIGRlIHJlZHVjaXIgc3UgaHVlbGxhIGRlIGNhcmJvbm8gbWVkaWFudGUgZWwgdXNvIGRlIGVuZXJnw61hcyByZW5vdmFibGVzIGVuIHN1cyBwbGFudGFzLCBpbnZpZXJ0ZSBlbiBwcm9ncmFtYXMgZGUgZWR1Y2FjacOzbiBudXRyaWNpb25hbCBwYXJhIGxhcyBjb211bmlkYWRlcyBsb2NhbGVzLiBFc3RlIHRpcG8gZGUgaW5pY2lhdGl2YSBjb250cmlidXllIGEgbGEgc29zdGVuaWJpbGlkYWQgYW1iaWVudGFsIHkgcHJvbXVldmUgdW4gaW1wYWN0byBwb3NpdGl2byBlbiBsYSBzYWx1ZCB5IGVsIGJpZW5lc3RhciBkZSBsYSBzb2NpZWRhZC4gICAgIAogICAgICAgIHAgRW4gY3VhbnRvIGEgbGEgbm9ybWF0aXZhIHkgZXN0w6FuZGFyZXMsIGV4aXN0ZW4gb3JpZW50YWNpb25lcyBwYXJhIHN1IGltcGxlbWVudGFjacOzbiBjb21vIGxhIElTTyAyNjAwMCBndcOtYSBpbnRlcm5hY2lvbmFsLCBxdWUgcHJvcG9yY2lvbmEgbGluZWFtaWVudG9zIHNvYnJlIGxhIHJlc3BvbnNhYmlsaWRhZCBzb2NpYWwsIGF5dWRhbmRvIGEgbGFzIG9yZ2FuaXphY2lvbmVzIGEgY29tcHJlbmRlciBlIGltcGxlbWVudGFyIHByw6FjdGljYXMgcmVzcG9uc2FibGVzLiBFc3RhIG5vcm1hLCBhdW5xdWUgbm8gZXMgY2VydGlmaWNhYmxlLCBlc3RhYmxlY2UgcHJpbmNpcGlvcyB5IHJlY29tZW5kYWNpb25lcyBwYXJhIHF1ZSBsYXMgZW1wcmVzYXMgYWRvcHRlbiB1biBlbmZvcXVlIGRlIFJTQyBxdWUgaW5jbHV5YSB0ZW1hcyBjb21vIGdvYmllcm5vIG9yZ2FuaXphY2lvbmFsLCBkZXJlY2hvcyBodW1hbm9zLCBwcsOhY3RpY2FzIGxhYm9yYWxlcyBzYW5hcywgbWVkaW8gYW1iaWVudGUgeSBsYSBwYXJ0aWNpcGFjacOzbiBhY3RpdmEgZW4gbGEgY29tdW5pZGFkLiBBc8OtLCBsYSBJU08gMjYwMDAgZmFjaWxpdGEgcXVlIGxhcyBvcmdhbml6YWNpb25lcyBkZSBjdWFscXVpZXIgdGFtYcOxbyBvIHNlY3RvciwgY29udHJpYnV5YW4gYSBsYSBzb3N0ZW5pYmlsaWRhZCBnbG9iYWwsIGludGVncmFuZG8gbGEgcmVzcG9uc2FiaWxpZGFkIHNvY2lhbCBlbiB0b2RvcyBsb3MgYXNwZWN0b3MgZGUgc3UgZ2VzdGnDs24geSBwcm9tb3ZpZW5kbyB1biBkZXNhcnJvbGxvIGVxdWlsaWJyYWRvIGVudHJlIGNyZWNpbWllbnRvIGVjb27Ds21pY28geSBiaWVuZXN0YXIgc29jaWFsLgogICAgcC5tYi00IExhIGltcG9ydGFuY2lhIGRlIGltcGxlbWVudGFyIGxhIFJlc3BvbnNhYmlsaWRhZCBTb2NpYWwgQ29ycG9yYXRpdmEsIG9iZWRlY2UgYSB2YXJpb3MgYXNwZWN0b3M6IG1lam9yYSBsYSByZXB1dGFjacOzbiBkZSBsYSBlbXByZXNhLCBmb21lbnRhIGxhIGxlYWx0YWQgZGVsIGNsaWVudGUsIGxvIHF1ZSBhIGxhcmdvIHBsYXpvIHJlcGVyY3V0ZSBlbiBsYSBzb3N0ZW5pYmlsaWRhZCBkZSBlc3RhLgogICAgcC5tYi01IExvcyBwaWxhcmVzIGRlIGxhIFJlc3BvbnNhYmlsaWRhZCBTb2NpYWwgQ29ycG9yYXRpdmEsIHNvbjoKICAgIC5yb3cuanVzdGlmeS1jb250ZW50LWNlbnRlci5tYi01CiAgICAgIC5jb2wtbGctOAogICAgICAgIC50aXR1bG8tc2V4dG8uY29sb3ItYWNlbnRvLWNvbnRlbmlkbyhkYXRhLWFvcz0nZmFkZS1yaWdodCcpCiAgICAgICAgICBoNSBGaWd1cmEgMS4gCiAgICAgICAgICBzcGFuIFBpbGFyZXMgZGUgbGEgcmVzcG9uc2FiaWxpZGFkIHNvY2lhbCBjb3Jwb3JhdGl2YS4KICAgICAgICBpbWcoc3JjPSdAL2Fzc2V0cy9jdXJzby90ZW1hcy8xNi5zdmcnLCBhbHQ9JycpLm1iLTUKICAgICN0XzNfMi50aXR1bG8tc2VndW5kbyhkYXRhLWFvcz0iZmxpcC11cCIpCiAgICAgIGgyICNbc3BhbiAzLjJdIFJlbGFjacOzbiBkZSBsYSByZXNwb25zYWJpbGlkYWQgc29jaWFsIGNvcnBvcmF0aXZhIHkgw6l0aWNhCiAgICBwLm1iLTQgTGEgUmVsYWNpw7NuIGVudHJlIGxhIFJlc3BvbnNhYmlsaWRhZCBTb2NpYWwgQ29ycG9yYXRpdmEgKFJTQykgeSBsYSDDqXRpY2EsIGVzIGZ1bmRhbWVudGFsLCBkYWRvIHF1ZSBsYSBSU0Mgc2UgYmFzYSBlbiBwcmluY2lwaW9zIMOpdGljb3MgcXVlIGd1w61hbiBhIGxhcyBvcmdhbml6YWNpb25lcyBwYXJhIGFjdHVhciBkZSBtYW5lcmEgcmVzcG9uc2FibGUgeSBqdXN0YSwgaGFjaWEgc3VzIGRpZmVyZW50ZXMgZ3J1cG9zIGRlIGludGVyw6lzLiBFc3RhIHJlbGFjacOzbiBpbXBsaWNhIHVuYSBpbnRlcmNvbmV4acOzbiBlbiBsYSBxdWUgbGEgw6l0aWNhIHNlIGNvbnZpZXJ0ZSBlbiBlbCBlamUgcmVjdG9yIGRlIGxhcyBwcsOhY3RpY2FzIGRlIFJTQywgb3JpZW50YW5kbyBsYXMgZGVjaXNpb25lcyBlbXByZXNhcmlhbGVzIGhhY2lhIGVsIGJpZW5lc3RhciBzb2NpYWwsIGxhIHRyYW5zcGFyZW5jaWEgeSBsYSBpbnRlZ3JpZGFkLiBMYSDDqXRpY2EgZW4gbGEgUlNDLCBubyBzb2xvIHNpZ25pZmljYSBjdW1wbGlyIGNvbiBsYSBsZXksIHNpbm8gcXVlIHRhbWJpw6luIGltcGxpY2EgaXIgbcOhcyBhbGzDoSBkZSBsYXMgb2JsaWdhY2lvbmVzIGxlZ2FsZXMsIHBhcmEgYWJvcmRhciBjdWVzdGlvbmVzIGRlIGp1c3RpY2lhLCBlcXVpZGFkIHkgcmVzcGV0byBhIGxvcyBkZXJlY2hvcyBodW1hbm9zLiBEZW5vdGFuZG8gcXVlIGxhIFJTQyB5IGxhIMOpdGljYSB0cmFiYWphbiBkZSBsYSBtYW5vIHBhcmEgZ2VuZXJhciB2YWxvciBhIGxhcmdvIHBsYXpvLCB0YW50byBwYXJhIGxhIGVtcHJlc2EgY29tbyBwYXJhIGxhIHNvY2llZGFkLgogICAgLnJvdy5qdXN0aWZ5LWNvbnRlbnQtY2VudGVyLm1iLTUKICAgICAgLmNvbC1sZy01LmNvbC03Lm1iLWxnLTAubWItMzogaW1nKHNyYz0nQC9hc3NldHMvY3Vyc28vdGVtYXMvMTcucG5nJywgYWx0PScnKQogICAgICAuY29sLWxnLTcKICAgICAgICAucC00Lm1iLTQoc3R5bGU9ImJhY2tncm91bmQtY29sb3I6ICNlYWY4ZmQgIikKICAgICAgICAgIHAubWItMCBVbiBlamVtcGxvIGRlIGVzdGEgaW50ZXJjb25leGnDs24gc2UgcHVlZGUgb2JzZXJ2YXIgZW4gZW1wcmVzYXMgcXVlIGhhbiBhZG9wdGFkbyBwb2zDrXRpY2FzIGRlIHNvc3RlbmliaWxpZGFkIMOpdGljYSBlbiBzdXMgbGFib3Jlcy4gRXN0YXMgZW1wcmVzYXMgYXNlZ3VyYW4gY29uZGljaW9uZXMgZGUgdHJhYmFqbyBqdXN0YXMgeSBzYWxhcmlvcyBkaWdub3MsIHBhcmEgbG9zIGVtcGxlYWRvcyBkZSBzdXMgcHJvdmVlZG9yZXMsIHByb21vdmllbmRvIGFzw60gdW5hIGNhZGVuYSBkZSBzdW1pbmlzdHJvLCDDqXRpY2EuICAKICAgICAgICBwLm1iLTAgT3RybyBjYXNvIGRlIGVzdHVkaW8gcHVlZGUgc2VyIGVsIGRlIGNvbXBhw7HDrWFzIHF1ZSBpbXBsZW1lbnRhbiBwcsOhY3RpY2FzIGRlIHRyYW5zcGFyZW5jaWEgZW4gc3UgY29udGFiaWxpZGFkLCBnYXJhbnRpemFuZG8gYSBzdXMgaW52ZXJzb3JlcyB5IGNvbnN1bWlkb3JlcywgcXVlIHN1cyBvcGVyYWNpb25lcyBzb24gaG9uZXN0YXMgeSByZXNwb25zYWJsZXMuCiAgICBwLm1iLTQgRW4gQ29sb21iaWEsIGhheSBlbXByZXNhcyBxdWUgaGFuIGltcGxlbWVudGFkbyBwcsOhY3RpY2FzIHF1ZSBtdWVzdHJhbiBsYSByZWxhY2nDs24gZW50cmUgUmVzcG9uc2FiaWxpZGFkIFNvY2lhbCBDb3Jwb3JhdGl2YSAoUlNDKSB5IGxhIMOpdGljYSwgYSB0cmF2w6lzIGRlIHByb2dyYW1hcyBxdWUgYnVzY2FuIGN1bXBsaXIgY29uIGxhIGxleSwgeSBnZW5lcmFyIHVuIGltcGFjdG8gc29jaWFsIHBvc2l0aXZvLiBBIGNvbnRpbnVhY2nDs24sIGFsZ3Vub3MgZWplbXBsb3MgZGUgZW1wcmVzYXMgY29sb21iaWFuYXMgcXVlIGRlc3RhY2FuIGVuIGVzdGUgYXNwZWN0bzoKICAgIC5iZy1mdWxsLXdpZHRoLnAtNS5tYi01KHN0eWxlPSJiYWNrZ3JvdW5kLWNvbG9yOiAjZTNmM2Y0ICIpCiAgICAgIFNseWRlckEodGlwbz0nYicpLmJnLXdoaXRlCiAgICAgICAgLnJvdy5wLTUKICAgICAgICAgIC5jb2wtbGctNy5tYi00Lm1iLWxnLTAKICAgICAgICAgICAgaDQgR3J1cG8gw4l4aXRvCiAgICAgICAgICAgIHAgRXN0YSBjb21wYcOxw61hIGhhIGltcGxlbWVudGFkbyBlbCBwcm9ncmFtYSBHZW4gQ2VybywgcXVlIGJ1c2NhIGVycmFkaWNhciBsYSBkZXNudXRyaWNpw7NuIGluZmFudGlsIGVuIENvbG9tYmlhLCBwYXJhIGVsIGHDsW8gMjAzMC4gQSB0cmF2w6lzIGRlIGFsaWFuemFzIGNvbiBmdW5kYWNpb25lcyB5IGxhIGludmVyc2nDs24gZW4gcHJvZ3JhbWFzIGRlIG51dHJpY2nDs24geSBlZHVjYWNpw7NuLCBHcnVwbyDDiXhpdG8gZGVtdWVzdHJhIGPDs21vIGxhIFJTQywgZ3VpYWRhIHBvciBwcmluY2lwaW9zIMOpdGljb3MsIHB1ZWRlIGNvbnRyaWJ1aXIgYSByZXNvbHZlciBwcm9ibGVtYXMgc29jaWFsZXMgY3LDrXRpY29zLiBFc3RlIHByb2dyYW1hIG5vIHNvbG8gYXRpZW5kZSB1bmEgbmVjZXNpZGFkIGZ1bmRhbWVudGFsIGVuIGxhIHNvY2llZGFkIGNvbG9tYmlhbmEsIHNpbm8gcXVlIHRhbWJpw6luIGNyZWEgdmFsb3IgY29tcGFydGlkbywgYWwgbWVqb3JhciBsYSBjYWxpZGFkIGRlIHZpZGEgZGUgc3VzIGNvbnN1bWlkb3Jlcy4KICAgICAgICAgIC5jb2wtbGctNS5jb2wtNwogICAgICAgICAgICBmaWd1cmUKICAgICAgICAgICAgICBpbWcoc3JjPSdAL2Fzc2V0cy9jdXJzby90ZW1hcy8xOC5wbmcnLCBhbHQ9J1RleHRvIHF1ZSBkZXNjcmliYSBsYSBpbWFnZW4nKQogICAgICAgIC5yb3cucC01CiAgICAgICAgICAuY29sLWxnLTcubWItNC5tYi1sZy0wCiAgICAgICAgICAgIGg0IEJhbmNvbG9tYmlhCiAgICAgICAgICAgIHAgQ29tbyBwYXJ0ZSBkZSBzdXMgcG9sw610aWNhcyBkZSBSU0MsIEJhbmNvbG9tYmlhIGhhIGRlc2Fycm9sbGFkbyBwcm9ncmFtYXMgZGUgaW5jbHVzacOzbiBmaW5hbmNpZXJhLCBmYWNpbGl0YW5kbyBlbCBhY2Nlc28gYSBzZXJ2aWNpb3MgZmluYW5jaWVyb3MgYSBwb2JsYWNpb25lcyB2dWxuZXJhYmxlcyBxdWUgdHJhZGljaW9uYWxtZW50ZSBoYW4gc2lkbyBleGNsdWlkYXMgZGVsIHNpc3RlbWEgYmFuY2FyaW8uIEVzdGEgaW5pY2lhdGl2YSBzZSBhbGluZWEgY29uIGxhIMOpdGljYSBlbXByZXNhcmlhbCwgZGFkbyBxdWUgQmFuY29sb21iaWEgYnVzY2Egb2ZyZWNlciBoZXJyYW1pZW50YXMgcGFyYSBtZWpvcmFyIGxhIGNhbGlkYWQgZGUgdmlkYSBkZSBwZXJzb25hcyBkZSBiYWpvcyByZWN1cnNvcywgcGVybWl0acOpbmRvbGVzIGFob3JyYXIsIGludmVydGlyIHkgY3JlY2VyIGVjb27Ds21pY2FtZW50ZS4gRXN0byBtdWVzdHJhIGPDs21vIHVuYSBlbnRpZGFkIGJhbmNhcmlhIHB1ZWRlIGNvbnRyaWJ1aXIgYWwgYmllbmVzdGFyIHNvY2lhbCwgYWwgbWlzbW8gdGllbXBvIHF1ZSBleHBhbmRlIHN1IGJhc2UgZGUgY2xpZW50ZXMuCiAgICAgICAgICAuY29sLWxnLTUuY29sLTcKICAgICAgICAgICAgZmlndXJlCiAgICAgICAgICAgICAgaW1nKHNyYz0nQC9hc3NldHMvY3Vyc28vdGVtYXMvMTkucG5nJywgYWx0PSdUZXh0byBxdWUgZGVzY3JpYmEgbGEgaW1hZ2VuJykKICAgICAgICAucm93LnAtNQogICAgICAgICAgLmNvbC1sZy03Lm1iLTQubWItbGctMAogICAgICAgICAgICBoNCBDZW1lbnRvcyBBcmdvcwogICAgICAgICAgICBwIEFyZ29zIGhhIGRlc2Fycm9sbGFkbyBpbmljaWF0aXZhcyBkZSBzb3N0ZW5pYmlsaWRhZCB5IHByb2dyYW1hcyBjb211bml0YXJpb3MgcXVlIGluY2x1eWVuIGNhcGFjaXRhY2nDs24gZW4gaGFiaWxpZGFkZXMgdMOpY25pY2FzIHBhcmEgbG9zIGhhYml0YW50ZXMgZGUgbGFzIGNvbXVuaWRhZGVzIGNlcmNhbmFzIGEgc3VzIHBsYW50YXMsIGNvbiBlbCBvYmpldGl2byBkZSBtZWpvcmFyIHN1cyBvcG9ydHVuaWRhZGVzIGRlIGVtcGxlby4gQWRlbcOhcywgbGEgZW1wcmVzYSBwcm9tdWV2ZSBsYSBpbm5vdmFjacOzbiBlbiBsYSBwcm9kdWNjacOzbiBkZSBjZW1lbnRvIGNvbiBtZW5vciBpbXBhY3RvIGFtYmllbnRhbCwgbG8gY3VhbCByZWZsZWphIHN1IGNvbXByb21pc28gw6l0aWNvIGNvbiBsYSBzb3N0ZW5pYmlsaWRhZC4gRXN0YXMgcHLDoWN0aWNhcyBubyBzb2xvIGN1bXBsZW4gdW5hIGZ1bmNpw7NuIHNvY2lhbCwgc2lubyBxdWUgdGFtYmnDqW4gcG9zaWNpb25hbiBhIGxhIGVtcHJlc2EsIGNvbW8gbMOtZGVyIGVuIHNvc3RlbmliaWxpZGFkLCBlbiBzdSBzZWN0b3IuCiAgICAgICAgICAuY29sLWxnLTUuY29sLTcKICAgICAgICAgICAgZmlndXJlCiAgICAgICAgICAgICAgaW1nKHNyYz0nQC9hc3NldHMvY3Vyc28vdGVtYXMvMjAucG5nJywgYWx0PSdUZXh0byBxdWUgZGVzY3JpYmEgbGEgaW1hZ2VuJykKICAgICN0XzNfMy50aXR1bG8tc2VndW5kby5jb2xvci1hY2VudG8tY29udGVuaWRvKGRhdGEtYW9zPSdmYWRlLXJpZ2h0JykKICAgICAgaDIgMy4zIMOJdGljYSBlbiBsYXMgZGVjaXNpb25lcyBlbXByZXNhcmlhbGVzICAgICAKICAgIHAubWItNCBMYSDDqXRpY2EgZW4gbGFzIGRlY2lzaW9uZXMgZW1wcmVzYXJpYWxlcywgaW5mbHV5ZSBlbiBtw7psdGlwbGVzIGRpbWVuc2lvbmVzIGRlbCBmdW5jaW9uYW1pZW50byBvcmdhbml6YWNpb25hbC4gTG9zIHByaW5jaXBpb3Mgw6l0aWNvcyBlbiBsYSBnZXN0acOzbiBlbXByZXNhcmlhbCwgY29tbyBsYSB0cmFuc3BhcmVuY2lhLCBsYSByZXNwb25zYWJpbGlkYWQgc29jaWFsIHkgbGEgaW50ZWdyaWRhZCwgc29uIHBpbGFyZXMgcGFyYSBndWlhciBsYXMgYWNjaW9uZXMgeSBkZWNpc2lvbmVzIGRlIHVuYSBvcmdhbml6YWNpw7NuLiBFc3RvcyBwcmluY2lwaW9zIG5vIHNvbG8gZXN0YWJsZWNlbiB1biBtYXJjbyBub3JtYXRpdm8gaW50ZXJubywgc2lubyBxdWUgdGFtYmnDqW4gZm9tZW50YW4gdW5hIGN1bHR1cmEgb3JnYW5pemFjaW9uYWwgc8OzbGlkYSwgZW4gbGEgY3VhbCBsb3MgZW1wbGVhZG9zIHNlIHNpZW50ZW4gdmFsb3JhZG9zIHkgbW90aXZhZG9zIGEgY29udHJpYnVpciBjb24gZWwgw6l4aXRvIGNvbGVjdGl2by4gVW4gYW1iaWVudGUgZGUgdHJhYmFqbyBxdWUgcHJpb3JpemEgbGEgw6l0aWNhIHByb211ZXZlIGxhIGNvbmZpYW56YSB5IGxhIGxlYWx0YWQsIGxvIHF1ZSBwdWVkZSByZXN1bHRhciBlbiB1biBhdW1lbnRvIGRlIGxhIHByb2R1Y3RpdmlkYWQgeSBsYSBzYXRpc2ZhY2Npw7NuIGxhYm9yYWwuCiAgICAucm93Lmp1c3RpZnktY29udGVudC1jZW50ZXIubWItNQogICAgICAuY29sLWxnLTUuY29sLTcubWItbGctMC5tYi0zOiBpbWcoc3JjPSdAL2Fzc2V0cy9jdXJzby90ZW1hcy8yMS5wbmcnLCBhbHQ9JycpCiAgICAgIC5jb2wtbGctNwogICAgICAgIHAubWItNCBTaW4gZW1iYXJnbywgbGEgZmFsdGEgZGUgw6l0aWNhIGVuIGxhcyBkZWNpc2lvbmVzIGVtcHJlc2FyaWFsZXMsIHB1ZWRlIGNvbmxsZXZhciBhIGNvbnNlY3VlbmNpYXMgY29tbyBjcmlzaXMgZGUgcmVwdXRhY2nDs24geSBww6lyZGlkYSBkZSBjb25maWFuemEgcG9yIHBhcnRlIGRlIGxvcyBjb25zdW1pZG9yZXMuIEVzdG9zIGZhY3RvcmVzIGNvbXByb21ldGVuIGxhIGltYWdlbiBkZSBsYSBlbXByZXNhLCB5IHN1IGRlc2VtcGXDsW8gZmluYW5jaWVyby4gUG9yIG90cm8gbGFkbywgbGFzIGVtcHJlc2FzIHF1ZSBpbnRlZ3JhbiBsYSBSZXNwb25zYWJpbGlkYWQgU29jaWFsIENvcnBvcmF0aXZhIChSU0MpIGVuIHN1cyBvcGVyYWNpb25lcywgc3VlbGVuIGVuY29udHJhciB2ZW50YWphcyBjb21wZXRpdGl2YXMgYWwgZGlmZXJlbmNpYXJzZSBlbiB1biBtZXJjYWRvIGNhZGEgdmV6IG3DoXMgY29uc2NpZW50ZSBkZSBsYSDDqXRpY2EgeSBsYSBzb3N0ZW5pYmlsaWRhZC4gTGEgYWRvcGNpw7NuIGRlIHByw6FjdGljYXMgcmVzcG9uc2FibGVzLCBwZXJtaXRlIGEgZXN0YXMgb3JnYW5pemFjaW9uZXMgYXRyYWVyIGEgY29uc3VtaWRvcmVzIHF1ZSB2YWxvcmFuIGxhIMOpdGljYSwgbG8gcXVlLCBhIHN1IHZleiwgcHVlZGUgdHJhZHVjaXJzZSBlbiBsZWFsdGFkIGEgbGEgbWFyY2EgeSB1biBjcmVjaW1pZW50byBzb3N0ZW5pZG8uCiAgICAgICAgcC5tYi01IEFkZW3DoXMsIGxhIGltcGxlbWVudGFjacOzbiBkZSBpbmljaWF0aXZhcyBkZSBSU0MsIGluZmx1eWUgcG9zaXRpdmFtZW50ZSBlbiBsYSByZW50YWJpbGlkYWQgYSBsYXJnbyBwbGF6bywgcG9ycXVlIGVzdGFzIGJ1c2NhbiBtaW5pbWl6YXIgcmllc2dvcyBhc29jaWFkb3MgY29uIGxpdGlnaW9zIHkgY3Jpc2lzIHJlcHV0YWNpb25hbGVzLCB5IGJ1c2NhbiBtZWpvcmFyIHN1IHBvc2ljaW9uYW1pZW50byBlbiBlbCBtZXJjYWRvIHksIGVuIGNvbnNlY3VlbmNpYSwgZXhwZXJpbWVudGFyIHVuIHJlbmRpbWllbnRvIGZpbmFuY2llcm8gc3VwZXJpb3IuCiAgICAuYmctY29sb3ItMS5wLTQoZGF0YS1hb3M9ImZhZGUtbGVmdCIgc3R5bGU9ImJhY2tncm91bmQtY29sb3I6ICNlYWY4ZmQiKS5tYi01CiAgICAgIC5yb3cuYWxpZ24taXRlbXMtY2VudGVyCiAgICAgICAgLmNvbC1sZy1hdXRvCiAgICAgICAgICBpbWcoc3JjPSJAL2Fzc2V0cy9jdXJzby90ZW1hcy8yMi5zdmciLCBzdHlsZT0ibWF4LXdpZHRoOiA5MHB4IikubXgtYXV0bwogICAgICAgIC5jb2wtbGcKICAgICAgICAgIHAubWItMCBFbiBlc3RlIHNlbnRpZG8sIGxhIGNhbGlkYWQgeSBsb3MgbWVjYW5pc21vcyBkZSBhY3JlZGl0YWNpw7NuIHJlbGFjaW9uYWRvcyBjb24gbGEgUlNDLCBzb24gaGVycmFtaWVudGFzIG5lY2VzYXJpYXMgcGFyYSBkZW1vc3RyYXIgZWwgY29tcHJvbWlzbyBkZSB1bmEgb3JnYW5pemFjacOzbiBjb24gcHLDoWN0aWNhcyByZXNwb25zYWJsZXMsIGNvbnRyaWJ1eWVuZG8gYXPDrSBhIHN1IHZhbG9yIHkgcmVwdXRhY2nDs24sIGFudGUgY29uc3VtaWRvcmVzIHkgbGEgc29jaWVkYWQgZW4gZ2VuZXJhbCAoUm9kcsOtZ3VleiBKb3ZlciwgMjAxOSkuCiAgICAjdF8zXzQudGl0dWxvLXNlZ3VuZG8oZGF0YS1hb3M9ImZsaXAtdXAiKQogICAgICBoMiAjW3NwYW4gMy40XSBEZXNhZsOtb3MgZGUgbGEgUmVzcG9uc2FiaWxpZGFkIFNvY2lhbCBDb3Jwb3JhdGl2YSAKICAgIHAubWItNCBQYXJhIGNvbm9jZXIgc29icmUgZXN0YSB0ZW3DoXRpY2EsIGxvIGludml0YW1vcyBhIHZlciBlbCBzaWd1aWVudGUgdmlkZW86CiAgICAuYmctdmlkZW8uYmctZnVsbC13aWR0aC5wLTUKICAgICAgZmlndXJlCiAgICAgICAgLnZpZGVvCiAgICAgICAgICBpZnJhbWUod2lkdGg9IjU2MCIgaGVpZ2h0PSIzMTUiIHNyYz0iaHR0cHM6Ly93d3cueW91dHViZS5jb20vZW1iZWQvZjFwWVZTeUotNWM/c2k9RU00OXpIUUcwaENQYVBQaCIgdGl0bGU9IllvdVR1YmUgdmlkZW8gcGxheWVyIiBmcmFtZWJvcmRlcj0iMCIgYWxsb3c9ImFjY2VsZXJvbWV0ZXI7IGF1dG9wbGF5OyBjbGlwYm9hcmQtd3JpdGU7IGVuY3J5cHRlZC1tZWRpYTsgZ3lyb3Njb3BlOyBwaWN0dXJlLWluLXBpY3R1cmUiIGFsbG93ZnVsbHNjcmVlbikKICAgICAgICBmaWdjYXB0aW9uIFZpZGVvLiBEZXNhZsOtb3MgZGUgbGEgcmVzcG9uc2FiaWxpZGFkIHNjaWFsIGNvcnBvcmF0aXZhCgoKCgoKICAgIC5iZy1mdWxsLXdpZHRoLmJvcmRlci10b3AuYWN0aXZpZGFkLmJnLWNvbG9yLWFjdGl2aWRhZC5tYi01CiAgICAgIC5wLTQucC1tZC01CiAgICAgICAgI0FjdGl2aWRhZCAgICAgICAgICAgICAgICAKICAgICAgICAgIDxBY3RpdmlkYWQgOmN1ZXN0aW9uYXJpbz0iY3Vlc3Rpb25hcmlvIi8+CgoKICAgIC5iZy1mdWxsLXdpZHRoLmJvcmRlci10b3AuY29sb3ItcHJpbWFyaW8KICAgICAgLnAtNC5wLW1kLTUKICAgICAgICBoMihkYXRhLWFvcz0iZmFkZS1sZWZ0IikgTUFURVJJQUwgQ09NUExFTUVOVEFSSU8KICAgICAgICAucm93Lm1hdGVyaWFsLWNvbXBsZW1lbnRhcmlvCiAgICAgICAgICAuY29sLTEyLmNvbC1tZC02LmNvbC1sZy03CiAgICAgICAgICAgIHAgTG9zIGludml0YW1vcyBhIGV4cGxvcmFyIGVsIG1hdGVyaWFsIGNvbXBsZW1lbnRhcmlvIGRlIGVzdGUgY3Vyc28sIGVuIGVzdGEgc2VjY2nDs24gZW5jb250cmFyw6EgcmVjdXJzb3MgcXVlIGxlIHBlcm1pdGlyw6FuIHByb2Z1bmRpemFyICB5IGVucmlxdWVjZXIgc3UgYXByZW5kaXphamUgZW4gbG9zIHRlbWFzIHRyYXRhZG9zIGVuIGVzdGEgdW5pZGFkLgoKICAgICAgICAgICAgLy8gUmVmZXJlbmNpYXMgYWdyZWdhZGFzIHNlZ8O6biBmb3JtYXRvIHNvbGljaXRhZG8KICAgICAgICAgICAgcC5kLWZsZXgubXktNAogICAgICAgICAgICAgIGltZy5tZS0zKHNyYz0nQC9hc3NldHMvY29tcG9uZW50ZXMvbGluay5zdmcnIDpzdHlsZT0ieydtYXgtd2lkdGgnOicxNnB4J30iKQogICAgICAgICAgICAgIGEoaHJlZj0iaHR0cHM6Ly9lbGlicm8ubmV0L2VzL2xjL3RlY25vbG9naWNhZGVsb3JpZW50ZS90aXR1bG9zLzUxNDIzIiB0YXJnZXQ9Il9ibGFuayIgcmVsPSJub29wZW5lciBub3JlZmVycmVyIikgR2FyY8OtYSBQZXJlZ3LDrW4sIEUuICgyMDE4KS4gQmlvw6l0aWNhOiB0ZW1hcyBwYXJhIGVsIGRlYmF0ZS4gVm9sLiAyOiAoIGVkLikuIEJ1Ym9rIFB1Ymxpc2hpbmcgUy5MLgogICAgICAgICAgICBwLmQtZmxleC5teS00CiAgICAgICAgICAgICAgaW1nLm1lLTMoc3JjPSdAL2Fzc2V0cy9jb21wb25lbnRlcy9saW5rLnN2ZycgOnN0eWxlPSJ7J21heC13aWR0aCc6JzE2cHgnfSIpCiAgICAgICAgICAgICAgYShocmVmPSJodHRwczovL2VsaWJyby5uZXQvZXMvbGMvdGVjbm9sb2dpY2FkZWxvcmllbnRlL3RpdHVsb3MvNDExMzkiIHRhcmdldD0iX2JsYW5rIiByZWw9Im5vb3BlbmVyIG5vcmVmZXJyZXIiKSBHYXJ6YSBHcmltYWxkbywgSi4gRy4gJiBWYWxxdWkgQ2FjaGksIEMuICgyMDE3KS4gTG9zIHZhbG9yZXMgZW4gbGEgZGlhbMOpY3RpY2EgZGUgbGEgaHVtYW5pZGFkIHkgbGEgbmF0dXJhbGV6YSBlbiBlbCBzaWdsbyBYWEk6ICggZWQuKS4gRWRpY2lvbmVzIHkgR3LDoWZpY29zIEXDs24uCiAgICAgICAgICAgIHAuZC1mbGV4Lm15LTQKICAgICAgICAgICAgICBpbWcubWUtMyhzcmM9J0AvYXNzZXRzL2NvbXBvbmVudGVzL2xpbmsuc3ZnJyA6c3R5bGU9InsnbWF4LXdpZHRoJzonMTZweCd9IikKICAgICAgICAgICAgICBhKGhyZWY9Imh0dHBzOi8vZWxpYnJvLm5ldC9lcy9sYy90ZWNub2xvZ2ljYWRlbG9yaWVudGUvdGl0dWxvcy80MDk1MCIgdGFyZ2V0PSJfYmxhbmsiIHJlbD0ibm9vcGVuZXIgbm9yZWZlcnJlciIpIE7DusOxZXogZGUgQ2FzdHJvLCBJLiAoMjAxNykuIExhIGJpb8OpdGljYTogdW4gY2FtaW5vIHBhcmEgZWwgcHJlc2VudGU6ICggZWQuKS4gSVRFU08gLSBJbnN0aXR1dG8gVGVjbm9sw7NnaWNvIHkgZGUgRXN0dWRpb3MgU3VwZXJpb3JlcyBkZSBPY2NpZGVudGUuCiAgICAgICAgICAgIHAuZC1mbGV4Lm15LTQKICAgICAgICAgICAgICBpbWcubWUtMyhzcmM9J0AvYXNzZXRzL2NvbXBvbmVudGVzL2xpbmsuc3ZnJyA6c3R5bGU9InsnbWF4LXdpZHRoJzonMTZweCd9IikKICAgICAgICAgICAgICBhKGhyZWY9Imh0dHBzOi8vZWxpYnJvLm5ldC9lcy9sYy90ZWNub2xvZ2ljYWRlbG9yaWVudGUvdGl0dWxvcy8yMTkxODQiIHRhcmdldD0iX2JsYW5rIiByZWw9Im5vb3BlbmVyIG5vcmVmZXJyZXIiKSBQaW5pbGxhIEZvcmVybywgSi4gKDIwMjIpLiDDiXRpY2EgeSBiaW/DqXRpY2EgZW4gbGEgcHLDoWN0aWNhIHByb2Zlc2lvbmFsLiBSZXZpc3RhIENvbG9tYmlhbmEgZGUgQ2llbmNpYXMgQWRtaW5pc3RyYXRpdmFzLCA0ICgxKSwgNzgtOTM6ICggZWQuKS4gRnVuZGFjacOzbiBVbml2ZXJzaXRhcmlhIFNhbiBNYXRlby4KICAgICAgICAgICAgcC5kLWZsZXgubXktNAogICAgICAgICAgICAgIGltZy5tZS0zKHNyYz0nQC9hc3NldHMvY29tcG9uZW50ZXMvbGluay5zdmcnIDpzdHlsZT0ieydtYXgtd2lkdGgnOicxNnB4J30iKQogICAgICAgICAgICAgIGEoaHJlZj0iaHR0cHM6Ly9yZXBvc2l0b3Jpby5jZXBhbC5vcmcvc2VydmVyL2FwaS9jb3JlL2JpdHN0cmVhbXMvMzgwN2QwOGUtYzRiNS00MWRlLTlmZTUtYWQxMTVmMmYxNDQ3L2NvbnRlbnQiIHRhcmdldD0iX2JsYW5rIiByZWw9Im5vb3BlbmVyIG5vcmVmZXJyZXIiKSBNLiBFLiBWYWxlbnp1ZWxhLCBNLiBMLiBTY3VybyBlIEkuVmFjYSBUcmlnbyzigJxEZXNpZ3VhbGRhZCwgY3Jpc2lzIGRlIGxvcyBjdWlkYWRvcyB5IG1pZ3JhY2nDs24gZGVsIHRyYWJham8gZG9tw6lzdGljbyByZW11bmVyYWRvIGVuIEFtw6lyaWNhIExhdGluYeKAnSwgc2VyaWUgQXN1bnRvcyBkZSBHw6luZXJvLCBOwrAgMTU4IChMQy9UUy4yMDIwLzE3OSksIFNhbnRpYWdvLCBDb21pc2nDs24gRWNvbsOzbWljYSBwYXJhIEFtw6lyaWNhIExhdGluYSB5IGVsIENhcmliZSAoQ0VQQUwpLCAyMDIwCiAgICAgICAgICAgIHAuZC1mbGV4Lm15LTQKICAgICAgICAgICAgICBpbWcubWUtMyhzcmM9J0AvYXNzZXRzL2NvbXBvbmVudGVzL2xpbmsuc3ZnJyA6c3R5bGU9InsnbWF4LXdpZHRoJzonMTZweCd9IikKICAgICAgICAgICAgICBhKGhyZWY9Imh0dHBzOi8vZWpjbHMuYWRhcHQuaXQvaW5kZXgucGhwL3JsZGVfYWRhcHQvYXJ0aWNsZS92aWV3LzQ1MiIgdGFyZ2V0PSJfYmxhbmsiIHJlbD0ibm9vcGVuZXIgbm9yZWZlcnJlciIpIFNwZW1vbGxhLCBHLiBDLiAoMjAxNykuIEVsIHRyYWJham8gZW4gbGEgZXJhIGRpZ2l0YWw6IFJlZmxleGlvbmVzIHNvYnJlIGVsIGltcGFjdG8gZGUgbGEgZGlnaXRhbGl6YWNpw7NuIGVuIGVsIHRyYWJham8sIGxhIHJlZ3VsYWNpw7NuIGxhYm9yYWwgeSBsYXMgcmVsYWNpb25lcyBsYWJvcmFsZXMuIFJlbGFjaW9uZXMgTGFib3JhbGVzIHkgRGVyZWNobyBkZWwgRW1wbGVvLgogICAgICAgICAgICBwLmQtZmxleC5teS00CiAgICAgICAgICAgICAgaW1nLm1lLTMoc3JjPSdAL2Fzc2V0cy9jb21wb25lbnRlcy9saW5rLnN2ZycgOnN0eWxlPSJ7J21heC13aWR0aCc6JzE2cHgnfSIpCiAgICAgICAgICAgICAgYShocmVmPSJodHRwczovL3d3dy5yZXZpc3Rhc2ljZS5jb20vaW5kZXgucGhwL0JJQ0UvYXJ0aWNsZS9kb3dubG9hZC8zNTk4LzM1OTgiIHRhcmdldD0iX2JsYW5rIiByZWw9Im5vb3BlbmVyIG5vcmVmZXJyZXIiKSBkZSBsYSBDdWVzdGEgR29uesOhbGV6LCBNLiAoMjAwNCkuIEVsIHBvcnF1w6kgZGUgbGEgcmVzcG9uc2FiaWxpZGFkIHNvY2lhbCBjb3Jwb3JhdGl2YS4gNDXigJM1OC4KICAgICAgICAgICAgcC5kLWZsZXgubXktNAogICAgICAgICAgICAgIGltZy5tZS0zKHNyYz0nQC9hc3NldHMvY29tcG9uZW50ZXMvaWNvbm8teXQuc3ZnJyA6c3R5bGU9InsnbWF4LXdpZHRoJzonMTZweCd9IikKICAgICAgICAgICAgICBhKGhyZWY9Imh0dHBzOi8veW91dHUuYmUvcEUzVmVOY1laNjQiIHRhcmdldD0iX2JsYW5rIiByZWw9Im5vb3BlbmVyIG5vcmVmZXJyZXIiKSBCYW5jbyBJbnRlcmFtZXJpY2FubyBkZSBEZXNhcnJvbGxvIChCSUQpLiAoMjAyMCwgMTUgZGUgc2VwdGllbWJyZSkuIExhIGNyaXNpcyBkZSBsYSBkZXNpZ3VhbGRhZCB8IExhbnphbWllbnRvIGRlbCBpbmZvcm1lIFtWaWRlb10uIFlvdVR1YmUuCiAgICAgICAgICAgIHAuZC1mbGV4Lm15LTQKICAgICAgICAgICAgICBpbWcubWUtMyhzcmM9J0AvYXNzZXRzL2NvbXBvbmVudGVzL2ljb25vLXl0LnN2ZycgOnN0eWxlPSJ7J21heC13aWR0aCc6JzE2cHgnfSIpCiAgICAgICAgICAgICAgYShocmVmPSJodHRwczovL3lvdXR1LmJlL0YwcjlobDlrWWhVIiB0YXJnZXQ9Il9ibGFuayIgcmVsPSJub29wZW5lciBub3JlZmVycmVyIikgVW5pdmVyc2lkYWQgVMOpY25pY2EgUGFydGljdWxhciBkZSBMb2phIChVVFBMKS4gKDIwMTMsIDE2IGRlIG9jdHVicmUpLiBOb3JtYXMgZGUgbGEgUlNFIFtSZXNwb25zYWJpbGlkYWQgU29jaWFsIEVtcHJlc2FyaWFsXSBbVmlkZW9dLiBZb3VUdWJlLgoKCiAgICAgICAgIAoKICAgICAgICAgIC5jb2wtMTIuY29sLW1kLTYuY29sLWxnLTMub2Zmc2V0LWxnLTEKICAgICAgICAgICAgZmlndXJlCiAgICAgICAgICAgICAgaW1nKHNyYz0nQC9hc3NldHMvY29tcG9uZW50ZXMvbWF0ZXJpYWwtY29tcGxlbWVudGFyaW8uc3ZnJywgYWx0PScnKQoKCgo="},null]}